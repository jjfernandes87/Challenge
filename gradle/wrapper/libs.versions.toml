[versions]
# PLUGINS
plugin-android = "7.1.0"
plugin-ksp = "1.6.10-1.0.2"
plugin-ktlint = "10.2.1"
plugin-kotlin = "1.6.10"

# DI
kodein = "7.10.0"

# Service
coroutines = "1.6.0"
serialization = "1.3.2"
serializationConverter = "0.8.0"
retrofit = "2.9.0"
okHttp3 ="4.6.0"

#Room
room = "2.4.1"

# Android
constraintLayout = "2.0.4"
androidXRecyclerView = "1.1.0"
materialDesign = "1.5.0"
appCompat = "1.4.1"
lifecycle = "2.4.0"
lifecycle-utils = "2.1.0"
groupie = "2.9.0"
glide = "4.11.0"
androidx-core = "1.3.2"


# Test
junit = "4.13.2"
mockk = "1.12.2"
mockWebServer = "4.9.3"

[libraries]

# DI
kodein = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
kodein-android = { module = "org.kodein.di:kodein-di-framework-android-x", version.ref = "kodein" }

# Service
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "serializationConverter" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp3" }
okHttpLogging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp3" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
room = { module = "androidx.room:room-runtime", version.ref = "room"}
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room"}

# Android
materialDesign = { module = "com.google.android.material:material", version.ref = "materialDesign" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycle-utils" }
groupie = { module = "com.github.lisawray.groupie:groupie", version.ref = "groupie" }
groupie-viewBinding = { module = "com.github.lisawray.groupie:groupie-viewbinding", version.ref = "groupie" }
constraint-layout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-recycler-view = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidXRecyclerView" }

# Test
junit = { module = "junit:junit", version.ref = "junit" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }

[bundles]
di = ["kodein"]
diAndroid = ["kodein", "kodein-android"]
room = ["room"]
roomCompiler = ["roomCompiler"]
service = ["coroutines-android", "serialization", "serialization-converter", "retrofit", "okHttp", "okHttpLogging"]
android = ["materialDesign", "appCompat", "lifecycle-runtime", "lifecycle-viewModel", "lifecycle-extensions", "groupie", "groupie-viewBinding", "constraint-layout", "glide", "androidx-core", "androidx-recycler-view"]
test = ["junit", "coroutines-test", "mockk", "mockWebServer"]